/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.org.java_websocket;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import org.java_websocket.WebSocket;
import org.java_websocket.WebSocketAdapter;
import org.java_websocket.drafts.Draft;
import org.java_websocket.enums.Opcode;
import org.java_websocket.framing.Framedata;
import org.java_websocket.framing.PingFrame;
import org.java_websocket.handshake.ClientHandshake;
import org.java_websocket.handshake.ServerHandshake;
import org.java_websocket.handshake.ServerHandshakeBuilder;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.PrivateAccess;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class WebSocketAdapter_SSTest extends WebSocketAdapter_SSTest_scaffolding {
// allCoveredLines:[55, 62, 75, 85, 86, 96, 108, 109, 111]

  @Test(timeout = 4000)
  public void test_onPreparePing_0()  throws Throwable  {
      //caseID:dafa1ff8aae7d3224134feb07ad3b04f
      //CoveredLines: [108, 111]
      //Input_0_WebSocket: {}
      //Assert: assertFalse(method_result.isFin());
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock pingFrame0
      PingFrame pingFrame0 = mock(PingFrame.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      PrivateAccess.setVariable((Class<?>) WebSocketAdapter.class, webSocketAdapter0, "pingFrame", (Object) pingFrame0);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onPreparePing
      PingFrame pingFrame1 = webSocketAdapter0.onPreparePing(webSocket0);
      
      //Test Result Assert
      assertFalse(pingFrame1.isFin());
  }

  @Test(timeout = 4000)
  public void test_onPreparePing_1()  throws Throwable  {
      //caseID:62bed3679ff93b0862833bdd066ebd04
      //CoveredLines: [108, 109, 111]
      //Input_0_WebSocket: {}
      //Assert: assertNotNull(method_result);
      //Assert: assertEquals(Opcode.PING, method_result.getOpcode());
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onPreparePing
      PingFrame pingFrame0 = webSocketAdapter0.onPreparePing(webSocket0);
      
      //Test Result Assert
      assertNotNull(pingFrame0);
      
      //Test Result Assert
      assertEquals(Opcode.PING, pingFrame0.getOpcode());
  }

  @Test(timeout = 4000)
  public void test_onWebsocketHandshakeReceivedAsClient_2()  throws Throwable  {
      //caseID:da1d609c0c8fba3bb79b7ed7ee8551e8
      //CoveredLines: [62]
      //Input_0_WebSocket: {}
      //Input_1_ClientHandshake: {}
      //Input_2_ServerHandshake: {}
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock clientHandshake0
      ClientHandshake clientHandshake0 = mock(ClientHandshake.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock serverHandshake0
      ServerHandshake serverHandshake0 = mock(ServerHandshake.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onWebsocketHandshakeReceivedAsClient
      webSocketAdapter0.onWebsocketHandshakeReceivedAsClient(webSocket0, clientHandshake0, serverHandshake0);
  }

  @Test(timeout = 4000)
  public void test_onWebsocketHandshakeReceivedAsServer_3()  throws Throwable  {
      //caseID:c11567475f17a87320c13b3e5a38b18f
      //CoveredLines: [55]
      //Input_0_WebSocket: {}
      //Input_1_Draft: {}
      //Input_2_ClientHandshake: {}
      //Assert: assertEquals((short)0, method_result.getHttpStatus());
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock draft0
      Draft draft0 = mock(Draft.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock clientHandshake0
      ClientHandshake clientHandshake0 = mock(ClientHandshake.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onWebsocketHandshakeReceivedAsServer
      ServerHandshakeBuilder serverHandshakeBuilder0 = webSocketAdapter0.onWebsocketHandshakeReceivedAsServer(webSocket0, draft0, clientHandshake0);
      
      //Test Result Assert
      assertEquals((short)0, serverHandshakeBuilder0.getHttpStatus());
  }

  @Test(timeout = 4000)
  public void test_onWebsocketHandshakeSentAsClient_4()  throws Throwable  {
      //caseID:841c2293991965aee48623ab5dad2667
      //CoveredLines: [75]
      //Input_0_WebSocket: {}
      //Input_1_ClientHandshake: {}
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock clientHandshake0
      ClientHandshake clientHandshake0 = mock(ClientHandshake.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onWebsocketHandshakeSentAsClient
      webSocketAdapter0.onWebsocketHandshakeSentAsClient(webSocket0, clientHandshake0);
  }

  @Test(timeout = 4000)
  public void test_onWebsocketPing_5()  throws Throwable  {
      //caseID:91567f2a792e1ff6b25965c9e157c1a7
      //CoveredLines: [85, 86]
      //Input_0_WebSocket: {}
      //Input_1_Framedata: {}
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock pingFrame0
      PingFrame pingFrame0 = mock(PingFrame.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onWebsocketPing
      webSocketAdapter0.onWebsocketPing(webSocket0, pingFrame0);
  }

  @Test(timeout = 4000)
  public void test_onWebsocketPong_6()  throws Throwable  {
      //caseID:89724f313a2fb1499b56a384a00d902d
      //CoveredLines: [96]
      //Input_0_WebSocket: {}
      //Input_1_Framedata: {}
      
      //mock webSocketAdapter0
      WebSocketAdapter webSocketAdapter0 = mock(WebSocketAdapter.class, CALLS_REAL_METHODS);
      //mock webSocket0
      WebSocket webSocket0 = mock(WebSocket.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      //mock framedata0
      Framedata framedata0 = mock(Framedata.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      
      //Call method: onWebsocketPong
      webSocketAdapter0.onWebsocketPong(webSocket0, framedata0);
  }
}
