/*
 * This file was automatically generated by SmartUnit
 */

package smartunit.org.java_websocket;

import org.junit.Test;
import static org.junit.Assert.*;
import java.lang.reflect.Method;
import static org.smartunit.shaded.org.mockito.Mockito.*;
import org.smartunit.shaded.org.mockito.ArgumentMatchers;
import static org.smartunit.runtime.SmartAssertions.*;
import java.nio.ByteBuffer;
import java.nio.channels.ByteChannel;
import org.java_websocket.SocketChannelIOHelper;
import org.java_websocket.WebSocketImpl;
import org.java_websocket.WrappedByteChannel;
import org.junit.runner.RunWith;
import org.smartunit.runtime.ExecutorServiceAnswer;
import org.smartunit.runtime.SmartRunner;
import org.smartunit.runtime.SmartRunnerParameters;
import org.smartunit.runtime.TransactionTemplateAnswer;
import org.smartunit.runtime.ViolatedAssumptionAnswer;

@RunWith(SmartRunner.class) @SmartRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SocketChannelIOHelper_SSTest extends SocketChannelIOHelper_SSTest_scaffolding {

  @Test(timeout = 4000)
  public void test_batch_0()  throws Throwable  {
      //caseID:9242edb829d2a61555689d7b6cb0f697
      WebSocketImpl webSocketImpl0 = mock(WebSocketImpl.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      ByteChannel byteChannel0 = mock(ByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      // Undeclared exception!
      try { 
        SocketChannelIOHelper.batch(webSocketImpl0, byteChannel0);
      } catch(Throwable e) {
         verifyException("org.java_websocket.SocketChannelIOHelper", e);
         assertEquals("java.lang.NullPointerException", e.getClass().getName());
      }
  }
  @Test(timeout = 4000)
  public void test_batch_1()  throws Throwable  {
      //caseID:93291c78cea2a5ae24e93fba1bf4b02f
      ByteChannel byteChannel0 = mock(ByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      boolean boolean0 = SocketChannelIOHelper.batch((WebSocketImpl) null, byteChannel0);
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_readMore_2()  throws Throwable  {
      //caseID:2b3b0704260ed95a3f977a4e2a8f49fe
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      WebSocketImpl webSocketImpl0 = mock(WebSocketImpl.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //prepare data for wrappedByteChannel0
      WrappedByteChannel wrappedByteChannel0 = mock(WrappedByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(true).when(wrappedByteChannel0).isNeedRead();
      doReturn((-730)).when(wrappedByteChannel0).readMore(any(java.nio.ByteBuffer.class));
      boolean boolean0 = SocketChannelIOHelper.readMore(byteBuffer0, webSocketImpl0, wrappedByteChannel0);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_read_3()  throws Throwable  {
      //caseID:335d0734485135bbbc9ed64874c31b6c
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      WebSocketImpl webSocketImpl0 = mock(WebSocketImpl.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //prepare data for byteChannel0
      ByteChannel byteChannel0 = mock(ByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(1008).when(byteChannel0).read(any(java.nio.ByteBuffer.class));
      boolean boolean0 = SocketChannelIOHelper.read(byteBuffer0, webSocketImpl0, byteChannel0);
      assertTrue(boolean0);
  }
  @Test(timeout = 4000)
  public void test_read_4()  throws Throwable  {
      //caseID:ae62e3eed215e800428411e02882982e
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      WebSocketImpl webSocketImpl0 = mock(WebSocketImpl.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //prepare data for byteChannel0
      ByteChannel byteChannel0 = mock(ByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn((-1)).when(byteChannel0).read(any(java.nio.ByteBuffer.class));
      boolean boolean0 = SocketChannelIOHelper.read(byteBuffer0, webSocketImpl0, byteChannel0);
      assertFalse(boolean0);
  }
  @Test(timeout = 4000)
  public void test_readMore_5()  throws Throwable  {
      //caseID:4d686826408d0056a6d324d44bfe52ae
      ByteBuffer byteBuffer0 = mock(ByteBuffer.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      WebSocketImpl webSocketImpl0 = mock(WebSocketImpl.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());

      //prepare data for wrappedByteChannel0
      WrappedByteChannel wrappedByteChannel0 = mock(WrappedByteChannel.class, withSettings().defaultAnswer(new ViolatedAssumptionAnswer()).stubOnly());
      doReturn(false).when(wrappedByteChannel0).isNeedRead();
      doReturn((-1)).when(wrappedByteChannel0).readMore(any(java.nio.ByteBuffer.class));
      boolean boolean0 = SocketChannelIOHelper.readMore(byteBuffer0, webSocketImpl0, wrappedByteChannel0);
      assertFalse(boolean0);
  }}
